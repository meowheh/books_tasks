/*Задание 6.1: напишите класс Vec, который представляет вектор в двумерном пространстве. Вектор принимает параметры x и y (числа) и сохраняет их в свойствах с тем же именем. Напишите для прототипа Vec два метода, plus и minus, которые принимают в качестве параметра другой вектор и возвращают новый вектор, представляющий собой сумму или разность значений x и y для двух векторов (this и параметра). Добавьте в прототип свойство-геттер length, которое вычисляет длину вектора - расстояние от точки (x,y) до начала координат (0,0).*/

//Описание класса Vec, представляющий вектор в двумерном пространстве
class Vec {
    //Конструктор класса, принимающий числа x и y в качестве соответствующих координат
    constructor(x, y){
        //присваиваем свойствам x и y данного объекта (обращение с помощью this.) значениям x и y в аргументах конструктора
        this.x = x;
        this.y = y;
    }
    //Метод plus, принимающий в качестве аргумента объект vec класса Vec 
    plus(vec){
        //Возвращаем новый объект, просуммировав координаты данного объекта с координатами объекта vec
        return new Vec(this.x + vec.x, this.y + vec.y);
    }
    //Метод minus, принимающий в качестве аргумента объект vec класса Vec
    minus(vec){
        //Возвращаем новый объект, отнимая координаты даного объекта с координатами объекта vec
        return new Vec(this.x - vec.x, this.y - vec.y);
    }
    //метод-геттер length, возвращающий длину вектора
    get length(){
        //Вычисляем длину вектора по корню квадратному из суммы квадратов координат текущего вектора x и y
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
}

//Выводим на экран результат выполнения методов, объект создается с помощью оператора new
console.log(new Vec(1, 2).plus(new Vec(2, 3)));
// → Vec{x: 3, y: 5}
console.log(new Vec(1, 2).minus(new Vec(2, 3)));
// → Vec{x: -1, y: -1}
console.log(new Vec(3, 4).length);
// → 5