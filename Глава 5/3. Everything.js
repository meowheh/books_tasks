/*Задание: Реализуйте метод every, принимающий в качестве параметров массив и предикативную функцию. 
Этот метод возвращает true, когда заданная функция возвращает true для каждого элемента массива.
Напишите две версии: одну с использованием цикла, а вторую - с применением метода some. */

//функция every с использованием цикла
function everyCycle(array, test){
	//проходим по каждому элементу массива array
  for(let each of array)
	  //если условие test не выполняется хотя бы для одного элемента массива
	  if(!test(each)) 
		  //возвращаем false
         return false;
	//иначе все элементы удовлетворяют условию test
  return true;
}
//версия функции every с использованием some
function everySome(array,test){
 /*по сути функция some совершает логическое ИЛИ над всеми элементами массива,
 а every - логическое И. Тогда по закону Де Моргана можно выразить x && y = !(!x || !y)
 и в нашем случае нужно наложить логическое отрицание на аргумент функции some - логическое условие test
 и на результат функции some, и мы проверим НЕ (хотя бы один элемент НЕ удовлетворяет условию) == все элементы удовлетворяют условию*/
	return (!array.some(x => !test(x)));
}

console.log(everyCycle([1, 3, 5], n => n < 10));
// → true
console.log(everyCycle([2, 4, 16], n => n < 10));
// → false
console.log(everyCycle([], n => n < 10));
// → true
console.log(everySome([1, 3, 5], n => n < 10));
// → true
console.log(everySome([2, 4, 16], n => n < 10));
// → false
console.log(everySome([], n => n < 10));
// → true
