/*Задание: напишите функцию range, которая принимает два аргумента start и end, и возвращает массив,
содержащий все числа от start до end включительно.
Напишите функцию sum, которая принимает массив чисел и возвращает их сумму.
Измените функцию range так, чтобы она принимала необязательный третий аргумент, 
который указывал бы значение шага, используемое при построении массива. Если шаг не задан, элементы увеличиваются на единицу. */

//Функция, возвращающая массив чисел от start до end включительно с шагом step по умолчанию 1
function range(start, end, step = 1)
{
	let array = [];  //инициализация массива результата
	/*Определяем сколько раз нужно проходить через цикл: 
		отнимаем из большего числа меньшее, делим на модуль шага и округляем*/
	let dx = 1+((start > end) ? Math.floor((start-end)/(-step)):
								Math.floor((end-start)/step))
	/*Цикл, добавляющий в array числа от start до end с шагом step, где
		i - счетчик количества итераций, pos - текущее добавляемое значение*/
	for(let i =0, pos = start; i < dx;array.push(pos), i++, pos+=step);
	return array;
}
//Функция, возвращающая сумма элементов массива array
function sum(array)
{
	let res = 0;  //инициализация суммарного значений
	
	/*цикл по каждому элементу массива array
	с прибавлением к res значения текущего элемента each*/
	for(let each of array)
	{
		res += each;
	}
	return res;
}

console.log(`range(1, 10) = [${range(1,10)}]`);
// → [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
console.log(`range(5, 2, -1) = [${range(5, 2, -1)}]`);
// → [5, 4, 3, 2]
console.log(`range(1, 10, 2) = [${range(1, 10, 2)}]`);
// → [1, 3, 5, 7, 9]
console.log(`sum(range(1, 10)) = ${sum(range(1, 10))}`);
// → 55